@page "/bookings-crud"
@attribute [Authorize()]
@inherits AuthComponentBase

<h1 class="fs-2">Bookings CRUD</h1>

@if (showCreate)
{
    <Create close=@(() => showCreate = false) done="onDone" />
}
else if (updateId != null)
{
    <Update Id="updateId" close=@(() => updateId = null) done="onDone" />
}
else
{
    <button class="btn btn-outline-primary" @onclick=@(_ => showCreate = true)>
        <span class="oi oi-plus" aria-hidden="true"></span>
        Create Booking
    </button>
}

@if (apiResult.IsSuccess && apiResult.Response!.Results?.Count > 0)
{
    <div class="shadow-sm p1 mt-4">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>RoomType</th>
                <th>Room No</th>
                <th>Start Date</th>
                <th>Cost</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var booking in apiResult.Response.Results)
            {
                <tr @key=@booking.Id>
                    <td>@booking.Id</td>
                    <td>@booking.Name</td>
                    <td>@booking.RoomType</td>
                    <td>@booking.RoomNumber</td>
                    <td>@booking.BookingStartDate.ToShortDateString()</td>
                    <td>@($"{booking.Cost:C}")</td>
                    <td>
                        <button class="btn btn-outline-success" @onclick=@(() => updateId = booking.Id)>Edit</button>
                        <button class="btn btn-danger" @onclick="@(() => delete(booking.Id))">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    </div>
}
else if (!apiResult.Completed)
{
    <p class="mt-5 fs-3 text-muted">Retrieving Bookings ...</p>
}

<div class="mt-5 text-gray-400 flex justify-center">
    <a href="https://github.com/ServiceStackApps/blazor-wasm-servicestack/blob/master/MyApp.ServiceModel/Bookings.cs" class="mx-2">
        <span class="oi oi-code w-5 h-5 inline-flex text-red-800 me-1"></span>Bookings.cs</a>
    <a href="https://github.com/ServiceStackApps/blazor-wasm-servicestack/blob/master/MyApp.Client/Pages/BookingsCrud/Index.razor" class="mx-2">
        <img src="/img/blazor.svg" class="w-5 h-5 inline-flex text-purple-800 me-1">Index.razor</a>
</div>


@code {
    bool showCreate { get; set; }

    int? updateId { get; set; }

    ApiResult<QueryResponse<Bookings>> apiResult = new();

    async Task refresh() => apiResult = await ApiAsync(new QueryBookings());

    protected override async Task OnInitializedAsync() => await refresh();

    async Task onDone(IdResponse result)
    {
        showCreate = false;
        updateId = null;
        await refresh();
    }

    ApiResult<EmptyResponse> deleteApiResult = new();

    async Task delete(int id)
    {
        deleteApiResult = await ApiAsync(new DeleteBooking { Id = id });
        if (deleteApiResult.IsSuccess)
            await refresh();            
    }
}
